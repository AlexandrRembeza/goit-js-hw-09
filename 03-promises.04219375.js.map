{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGeC,SAASC,cAAc,SAC/BC,iBAAiB,UAIxB,SAAqCC,GACnCA,EAAEC,iBAEF,MAAMC,EAAa,GACF,IAAIC,SAASH,EAAEI,eAEvBC,SAAQ,CAACC,EAAOC,IAAUL,EAAWK,GAAQC,OAAOF,KAE7DN,EAAEI,cAAcK,QAuBlB,UAAuBC,OAAEA,EAAMC,MAAEA,EAAKC,KAAEA,IACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACTC,EAAUC,aAAY,KACpB,IAAK,IAAIC,EAAI,EAAGA,GAAKT,EAAQS,GAAK,EAAG,CACfC,KAAKC,SAAW,GAGlCP,EAAQ,uBAAqBK,QAAUR,OAErCI,EAAK,sBAAoBI,QAAQR,OAGrCA,GAASC,KAEVA,KACFD,MArCLW,CAAcpB,GACXqB,MAAKjB,IACJkB,EAAA7B,GAAS8B,OAAOC,QAAQ,GAAGpB,IAAS,CAClCqB,MAAO,QACPC,SAAU,YACVC,cAAc,EACdC,QAAS,QACTC,SAAU,YAGbC,OAAM1B,IACLkB,EAAA7B,GAAS8B,OAAOQ,QAAQ,GAAG3B,IAAS,CAClCqB,MAAO,QACPC,SAAU,YACVC,cAAc,EACdC,QAAS,QACTC,SAAU,eA5BlB,IAAId,EAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst formEL = document.querySelector('.form');\nformEL.addEventListener('submit', getFormValuesAndGetMessages);\n\nlet timerId = null;\n\nfunction getFormValuesAndGetMessages(e) {\n  e.preventDefault();\n\n  const formValues = {};\n  const formData = new FormData(e.currentTarget);\n\n  formData.forEach((value, name) => (formValues[name] = Number(value)));\n\n  e.currentTarget.reset();\n\n  createPromise(formValues)\n    .then(value => {\n      Notiflix.Notify.success(`${value}`, {\n        width: '400px',\n        position: 'right-top',\n        clickToClose: true,\n        svgSize: '120px',\n        fontSize: '18px',\n      });\n    })\n    .catch(value => {\n      Notiflix.Notify.failure(`${value}`, {\n        width: '400px',\n        position: 'right-top',\n        clickToClose: true,\n        svgSize: '120px',\n        fontSize: '18px',\n      });\n    });\n}\n\nfunction createPromise({ amount, delay, step }) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      timerId = setInterval(() => {\n        for (let i = 1; i <= amount; i += 1) {\n          let shouldResolve = Math.random() > 0.3;\n\n          if (shouldResolve) {\n            resolve(`✅ Fulfilled promise ${i} in ${delay}ms`);\n          } else {\n            reject(`❌ Rejected promise ${i} in ${delay}ms`);\n          }\n\n          delay += step;\n        }\n      }, step);\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","addEventListener","e","preventDefault","formValues","FormData","currentTarget","forEach","value","name","Number","reset","amount","delay","step","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$timerId","setInterval","i","Math","random","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","width","position","clickToClose","svgSize","fontSize","catch","failure"],"version":3,"file":"03-promises.04219375.js.map"}