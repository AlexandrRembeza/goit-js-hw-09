{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGeC,SAASC,cAAc,SAC/BC,iBAAiB,UAIxB,SAAqCC,GACnCA,EAAEC,iBAEF,MAAMC,EAAa,GACF,IAAIC,SAASH,EAAEI,eAEvBC,SAAQ,CAACC,EAAOC,IAAUL,EAAWK,GAAQC,OAAOF,KAE7DN,EAAEI,cAAcK,QAuBlB,UAAuBC,OAAEA,EAAMC,MAAEA,EAAKC,KAAEA,IAC/BC,YAAW,KAChB,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAAG,CACfC,KAAKC,SAAW,GAGlCC,QAAQC,QAAQ,uBAAqBJ,QAAUH,OAAWQ,MAAMb,IAE5DO,YAAW,KACTO,EAAAzB,GAAS0B,OAAOC,QAAQ,GAAGhB,IAAS,CAClCiB,MAAO,QACPC,SAAU,YACVC,cAAc,EACdC,QAAS,QACTC,SAAU,WAEXf,MAIPK,QAAQW,OAAO,sBAAoBd,QAAQH,OAAWkB,OAAOvB,IAEzDO,YAAW,KACTO,EAAAzB,GAAS0B,OAAOS,QAAQ,GAAGxB,IAAS,CAClCiB,MAAO,QACPC,SAAU,YACVC,cAAc,EACdC,QAAS,QACTC,SAAU,WAEXf,MAKTD,GAASC,KAEVD,GA1DHoB,CAAc7B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst formEL = document.querySelector('.form');\nformEL.addEventListener('submit', getFormValuesAndGetMessages);\n\nlet timerId = null;\n\nfunction getFormValuesAndGetMessages(e) {\n  e.preventDefault();\n\n  const formValues = {};\n  const formData = new FormData(e.currentTarget);\n\n  formData.forEach((value, name) => (formValues[name] = Number(value)));\n\n  e.currentTarget.reset();\n\n  createPromise(formValues);\n  // .then(value => {\n  //   Notiflix.Notify.success(`${value}`, {\n  //     width: '400px',\n  //     position: 'right-top',\n  //     clickToClose: true,\n  //     svgSize: '120px',\n  //     fontSize: '18px',\n  //   });\n  // })\n  // .catch(value => {\n  //   Notiflix.Notify.failure(`${value}`, {\n  //     width: '400px',\n  //     position: 'right-top',\n  //     clickToClose: true,\n  //     svgSize: '120px',\n  //     fontSize: '18px',\n  //   });\n  // });\n}\n\nfunction createPromise({ amount, delay, step }) {\n  return setTimeout(() => {\n    for (let i = 1; i <= amount; i += 1) {\n      let shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        Promise.resolve(`✅ Fulfilled promise ${i} in ${delay}ms`).then(\n          value => {\n            setTimeout(() => {\n              Notiflix.Notify.success(`${value}`, {\n                width: '400px',\n                position: 'right-top',\n                clickToClose: true,\n                svgSize: '120px',\n                fontSize: '18px',\n              });\n            }, step);\n          }\n        );\n      } else {\n        Promise.reject(`❌ Rejected promise ${i} in ${delay}ms`).catch(\n          value => {\n            setTimeout(() => {\n              Notiflix.Notify.failure(`${value}`, {\n                width: '400px',\n                position: 'right-top',\n                clickToClose: true,\n                svgSize: '120px',\n                fontSize: '18px',\n              });\n            }, step);\n          }\n        );\n      }\n\n      delay += step;\n    }\n  }, delay);\n}\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","addEventListener","e","preventDefault","formValues","FormData","currentTarget","forEach","value","name","Number","reset","amount","delay","step","setTimeout","i","Math","random","Promise","resolve","then","$parcel$interopDefault","Notify","success","width","position","clickToClose","svgSize","fontSize","reject","catch","failure","$47d4ff9957288465$var$createPromise"],"version":3,"file":"03-promises.83e47d56.js.map"}