{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGeC,SAASC,cAAc,SAC/BC,iBAAiB,UAIxB,SAAqCC,GACnCA,EAAEC,iBAEF,IAAMC,EAAa,GACF,IAAIC,SAASH,EAAEI,eAEvBC,SAAQ,SAACC,EAAOC,G,OAAUL,EAAWK,GAAQC,OAAOF,MAE7DN,EAAEI,cAAcK,QAuBKC,EArBPR,EAqBSS,EAAFD,EAAEC,OAAQC,EAAVF,EAAUE,MAAOC,EAAjBH,EAAiBG,KAC/BC,YAAW,WAChB,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EACZC,KAAKC,SAAW,GAGlCC,QAAQC,QAAQ,uBAAiCC,OAARL,EAAE,QAAYK,OAANR,EAAM,OAAKS,MACxD,SAAFf,GACEQ,YAAW,WACTQ,EAAA3B,GAAS4B,OAAOC,QAAQ,GAASJ,OAANd,GAAS,CAClCmB,MAAO,QACPC,SAAU,YACVC,cAAc,EACdC,QAAS,QACTC,SAAU,WAEXhB,MAIPK,QAAQY,OAAO,sBAA8BV,OAARL,EAAE,QAAYK,OAANR,EAAM,OAAKmB,OACtD,SAAAzB,GACEQ,YAAW,WACTQ,EAAA3B,GAAS4B,OAAOS,QAAQ,GAASZ,OAANd,GAAS,CAClCmB,MAAO,QACPC,SAAU,YACVC,cAAc,EACdC,QAAS,QACTC,SAAU,WAEXhB,MAKTD,GAASC,IAEVD,GArCL,IAAuBF,EAAEC,EAAQC,EAAOC,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst formEL = document.querySelector('.form');\nformEL.addEventListener('submit', getFormValuesAndGetMessages);\n\nlet timerId = null;\n\nfunction getFormValuesAndGetMessages(e) {\n  e.preventDefault();\n\n  const formValues = {};\n  const formData = new FormData(e.currentTarget);\n\n  formData.forEach((value, name) => (formValues[name] = Number(value)));\n\n  e.currentTarget.reset();\n\n  createPromise(formValues);\n  // .then(value => {\n  //   Notiflix.Notify.success(`${value}`, {\n  //     width: '400px',\n  //     position: 'right-top',\n  //     clickToClose: true,\n  //     svgSize: '120px',\n  //     fontSize: '18px',\n  //   });\n  // })\n  // .catch(value => {\n  //   Notiflix.Notify.failure(`${value}`, {\n  //     width: '400px',\n  //     position: 'right-top',\n  //     clickToClose: true,\n  //     svgSize: '120px',\n  //     fontSize: '18px',\n  //   });\n  // });\n}\n\nfunction createPromise({ amount, delay, step }) {\n  return setTimeout(() => {\n    for (let i = 1; i <= amount; i += 1) {\n      let shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        Promise.resolve(`✅ Fulfilled promise ${i} in ${delay}ms`).then(\n          value => {\n            setTimeout(() => {\n              Notiflix.Notify.success(`${value}`, {\n                width: '400px',\n                position: 'right-top',\n                clickToClose: true,\n                svgSize: '120px',\n                fontSize: '18px',\n              });\n            }, step);\n          }\n        );\n      } else {\n        Promise.reject(`❌ Rejected promise ${i} in ${delay}ms`).catch(\n          value => {\n            setTimeout(() => {\n              Notiflix.Notify.failure(`${value}`, {\n                width: '400px',\n                position: 'right-top',\n                clickToClose: true,\n                svgSize: '120px',\n                fontSize: '18px',\n              });\n            }, step);\n          }\n        );\n      }\n\n      delay += step;\n    }\n  }, delay);\n}\n"],"names":["$iU1Pc","parcelRequire","document","querySelector","addEventListener","e","preventDefault","formValues","FormData","currentTarget","forEach","value","name","Number","reset","param","amount","delay","step","setTimeout","i","Math","random","Promise","resolve","concat","then","$parcel$interopDefault","Notify","success","width","position","clickToClose","svgSize","fontSize","reject","catch","failure"],"version":3,"file":"03-promises.e75abc2e.js.map"}